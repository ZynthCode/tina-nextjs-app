FROM node:18-alpine AS base

FROM base as deps 

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat

WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Rebuild the source code only when needed
FROM base AS builder

# tina specific args
ARG MONGODB_URI
ARG NEXTAUTH_SECRET
ARG GITHUB_BRANCH

WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

ENV NO_TELEMETRY 1

RUN yarn build

# Production image, copy all the files and run next
FROM base AS runner

ENV GITHUB_BRANCH=""
ENV GITHUB_OWNER=""
ENV GITHUB_REPO=""
ENV GITHUB_PERSONAL_ACCESS_TOKEN=""
ENV MONGODB_URI=""
ENV NEXTAUTH_SECRET=""
ENV NEXTAUTH_URL=""

ENV NEXT_PUBLIC_RECAPTCHA_SITE_KEY=""
ENV RECAPTCHA_SECRET_KEY=""
ENV RESEND_API_KEY=""
ENV TINA_PUBLIC_IS_LOCAL=""

WORKDIR /app

ENV NODE_ENV production
ENV NO_TELEMETRY 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

# Set the correct permission for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# tinacms (why do we need node_modules at this step??)
COPY --from=deps /app/node_modules ./node_modules
# COPY --from=builder /app/_siteb ./_site
# COPY --from=builder /app/dist ./dist

USER nextjs

EXPOSE 3000

ENV PORT 3000

# set hostname to localhost
ENV HOSTNAME "0.0.0.0"

# server.js is created by next build from the standalone output
# https://nextjs.org/docs/pages/api-reference/next-config-js/output
CMD ["node", "server.js"]